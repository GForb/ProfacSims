---
title: "Prediction with new data for intercept - Supplementary material"
format: 
  html:
    number-sections: True
    fig-height: 10
    fig-width: 8
editor: source
execute: 
  echo: FALSE
---

```{r include = FALSE}
library(tidyverse)
library(ggplot2)
library(DBI)
library(RSQLite)
library(here)
library(glue)

# Loading files:
sim_name <- "240124-pred-new-data"
results_folder <- here("Results", "Database-extracts", sim_name)
devtools::load_all()


```

## Calibration in the large
```{R}
calib_itl_stacked <- readRDS(file = here(results_folder, "calib_itl_stacked.RDS"))

```

```{r calib_itl_est, fig.height = 8, echo = FALSE}
          plot_data <- calib_itl_stacked |> 
           filter(
             predict_method != "new_dynamic", 
             n_studies ==4, 
             study_sample_size_train ==50) 

          plot <- plot_data |> 
            ProfacSims:::box_plot_by_pred_ss(what = "est") #
          
          plot <- plot + 
            labs(
              title = "Calibration in the large",
              subtitle = "Training data: 4 studies of size 50"
            ) +
            ylab("Calibration in the large")
          print(plot)
      
```

```{r calib_itl_hetro_small, fig.height = 8}

  my_n_studies <- 4        
  my_sample_size_train =50  

          plot_data <- calib_itl_stacked |> 
           filter(predict_method != "new_dynamic", n_studies == my_n_studies, study_sample_size_train == my_sample_size_train) |> 
           mutate(tau = sqrt(tau2))
          
          ri_sd <- plot_data |> 
            filter(predict_method == "new0") |> 
            select(R2, ICC, sigma_u) |> 
            group_by(R2, ICC) |> 
            summarise(sigma_u = mean(sigma_u)) |> 
            ungroup()
          
          
          plot <- plot_data |> 
            ProfacSims:::box_plot_by_pred_ss(what = "tau") +
            geom_hline(data = ri_sd, aes(yintercept = sigma_u), linetype = "dashed", color = "black") 
          
          plot <- plot + 
            labs(title = "Hetrogeneity in Calibration in the large",
                 subtitle = glue("Training data: {my_n_studies} studies of size {my_sample_size_train} ")) +
            ylab("Tau")
          print(plot)
  
            
```

```{r calib_itl_hetro_large, fig.height = 8}

  my_n_studies <- 64        
  my_sample_size_train =1000  

          plot_data <- calib_itl_stacked |> 
           filter(predict_method != "new_dynamic", n_studies == my_n_studies, study_sample_size_train == my_sample_size_train) |> 
           mutate(tau = sqrt(tau2))

            ri_sd <- plot_data |> 
            filter(predict_method == "new0") |> 
            select(R2, ICC, sigma_u) |> 
            group_by(R2, ICC) |> 
            summarise(sigma_u = mean(sigma_u)) |> 
            ungroup()
          
          
          plot <- plot_data |> 
            ProfacSims:::box_plot_by_pred_ss(what = "tau") +
            geom_hline(data = ri_sd, aes(yintercept = sigma_u), linetype = "dashed", color = "black") 
          
          
          plot <- plot + 
            labs(title = "Hetrogeneity in Calibration in the large",
                 subtitle = glue("Training data: {my_n_studies} studies of size {my_sample_size_train} ")) +
            ylab("Tau")
          print(plot)
  
            
```
## Calibration slope
```{R}
calib_slope_stacked <- readRDS(file = here(results_folder, "calib_slope_stacked.RDS"))


# Loading files:
results_folder_many_pred <- here("Results", "Database-extracts", "240211-many-pred")

data_many_pred <- readRDS(file = here(results_folder_many_pred, "calib_slope.RDS")) 




```

```{r calib_slope_many_pred}

  plot <- data_many_pred |>
    ProfacSims:::box_plot_by_pred_ss(what = "est") +
   theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank()) +
  ylab("Calibration slope")

  
  print(plot)




```
## R-squared
```{R}
r_squared_stacked <- readRDS(file = here(results_folder, "r_squared_stacked.RDS"))

```

```{r r2_est, fig.height = 8, echo = FALSE}
          plot_data <- r_squared_stacked |> 
           filter(
             predict_method != "new_dynamic", 
             n_studies ==4, 
             study_sample_size_train ==50) 

          plot <- plot_data |> 
            ProfacSims:::box_plot_by_pred_ss(what = "est") #
          
          plot <- plot + 
            labs(
              title = "R-squared",
              subtitle = "Training data: 4 studies of size 50"
            ) +
            ylab("R-squared") +
            scale_y_continuous(limits = c(0, NA))
          print(plot)
      
```

```{r r2_hetro_small, fig.height = 8}

  my_n_studies <- 4        
  my_sample_size_train =50  

          plot_data <- r_squared_stacked |> 
           filter(predict_method != "new_dynamic", n_studies == my_n_studies, study_sample_size_train == my_sample_size_train) |> 
           mutate(tau = sqrt(tau2))

          plot <- plot_data |> 
            ProfacSims:::box_plot_by_pred_ss(what = "tau") 
          
          plot <- plot + 
            labs(title = "Hetrogeneity R-squared",
                 subtitle = glue("Training data: {my_n_studies} studies of size {my_sample_size_train} ")) +
            ylab("Tau")
          print(plot)
  
            
```

```{r}
dynamci_data <- 
  bind_rows(calib_itl_stacked, calib_slope_stacked, r_squared_stacked)  |> 
  filter(n_studies ==4, study_sample_size_train ==50, R2 ==0.4)
```

```{r dynamic_est, fig.height = 8}

          plot <- dynamci_data |> 
            ProfacSims:::box_plot_dynamic_vs(what = "est") 
          
          plot <- plot + 
            labs(title = "Comparing dynamic predictions to new intercepts only: Estimates",
                 subtitle = glue("Training data: 4 studies of size 50")) +
            ylab("Estimate")
          print(plot)
  
            
```

```{r dynamic_tau, fig.height = 8}

          plot <- dynamci_data |> 
            ProfacSims:::box_plot_dynamic_vs(what = "tau") 
          
          plot <- plot + 
            labs(title = "Comparing dynamic predictions to new intercepts only: Hetrogeneity",
                 subtitle = glue("Training data: 4 studies of size 50")) +
            ylab("Tau")
          print(plot)
  
            
```
```{r}

```


```{r dynamic_tau_large, fig.height = 8}

dynamci_data_large <- 
  bind_rows(calib_itl_stacked, calib_slope_stacked, r_squared_stacked)  |> 
  filter(n_studies ==8, study_sample_size_train ==200, R2 ==0.4)

          plot <- dynamci_data_large |> 
            ProfacSims:::box_plot_dynamic_vs(what = "tau") 
          
          plot <- plot + 
            labs(title = "Comparing dynamic predictions to new intercepts only: Hetrogeneity",
                 subtitle = glue("Training data: 4 studies of size 50")) +
            ylab("Tau")
          print(plot)
  
            
```
